CREATE DEFINER=`root`@`localhost` FUNCTION `InsertarMovimiento`(
    p_DOC_CLIENTE BIGINT,  -- Documento del cliente
    p_IMPORTE_MOV DECIMAL(10,2)  -- Importe a mover (positivo para depósitos, negativo para extracciones)
    
) RETURNS int
    DETERMINISTIC
BEGIN
    DECLARE v_ID_CLIENTE INT;
    DECLARE v_NUEVO_COD_ULT_MOV INT;
    DECLARE v_SALDO_ACTUAL DECIMAL(10,2);
    DECLARE v_NUEVO_ID_CTACTES INT;
    DECLARE V_TIP_MOV  CHAR(01);
    -- Obtener ID_CLIENTE
    SELECT ID_CLIENTE INTO v_ID_CLIENTE 
    FROM BANCO.CLIENTES 
    WHERE DOC_CLIENTE = p_DOC_CLIENTE;

    -- Obtener el nuevo código de movimiento
    SELECT IFNULL(MAX(COD_ULT_MOV), 0) + 1 INTO v_NUEVO_COD_ULT_MOV
    FROM BANCO.CTACTES 
    WHERE ID_CLIENTE = v_ID_CLIENTE;

    -- Obtener el saldo actual
    SELECT SALDO_ACTUAL INTO v_SALDO_ACTUAL 
    FROM BANCO.CTACTES 
    WHERE ID_CLIENTE = v_ID_CLIENTE 
    AND COD_ULT_MOV = (SELECT MAX(COD_ULT_MOV) FROM BANCO.CTACTES WHERE ID_CLIENTE = v_ID_CLIENTE)
    LIMIT 1;

    -- Obtener nuevo ID_CTACTES
    SELECT MAX(ID_CTACTES) INTO v_NUEVO_ID_CTACTES 
    FROM BANCO.CTACTES WHERE ID_CLIENTE = v_ID_CLIENTE ;
    
    IF p_IMPORTE_MOV > 0 THEN
       SET V_TIP_MOV = 'D';
     ELSE
      SET  V_TIP_MOV = 'E';
    END IF;   
    
    -- Insertar nuevo movimiento
    INSERT INTO BANCO.MOVIMIENTOS_CTACTES (ID_MOV_CTA, ID_CTACTES, ID_CLIENTE,
                                           FECHA_MOV, TIP_MOV, IMPORTE_MOV, SALDO_ACTUAL)
    VALUES (v_NUEVO_COD_ULT_MOV, v_NUEVO_ID_CTACTES, v_ID_CLIENTE, CURDATE(), 
			V_TIP_MOV, p_IMPORTE_MOV, v_SALDO_ACTUAL + p_IMPORTE_MOV);
    
    -- update tabla maestra de ctactes
    UPDATE BANCO.CTACTES 
      SET FECHA_ULT_MOV = CURDATE(), COD_ULT_MOV = v_NUEVO_COD_ULT_MOV,
         IMPORTE_MOV = p_IMPORTE_MOV,
         SALDO_ACTUAL= v_SALDO_ACTUAL + p_IMPORTE_MOV
    WHERE ID_CLIENTE = v_ID_CLIENTE AND ID_CTACTES = v_NUEVO_ID_CTACTES;
    
    -- Retornar el ID del nuevo movimiento
    RETURN v_NUEVO_ID_CTACTES;
END